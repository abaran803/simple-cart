{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cartDisplay.js","store/cartItems.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/fetchOnStart.js","store/shopItems.js","store/store.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartDisplay","createSlice","name","initialState","showCart","notification","status","title","message","reducers","show","state","hide","toggle","addNotification","action","payload","cartActions","actions","cartItems","items","totalQuantity","addItem","newItem","existing","find","element","quantity","total","price","push","Number","increment","newItemTitle","decrement","selectedItemTitle","filter","item","fetchData","cartItemsActions","CartItem","dispatch","useDispatch","map","val","toFixed","itemprice","details","onClick","Cart","useSelector","cart","CartButton","cnt","button","badge","MainHeader","header","Layout","ProductItem","description","Products","shopItems","products","Notification","specialClasses","error","success","cssClasses","isInitial","App","displayCart","useEffect","a","fetch","process","response","ok","Error","json","data","cartData","alert","sendRequest","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","cartDisplayReducer","cartItemsReducer","shopItemsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09ec72a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1Noml\",\"details\":\"CartItem_details__1tPLb\",\"quantity\":\"CartItem_quantity__2U6XE\",\"price\":\"CartItem_price__DHA0D\",\"itemprice\":\"CartItem_itemprice__2ILCD\",\"actions\":\"CartItem_actions__NUVUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item___A-8q\",\"price\":\"ProductItem_price__1wpST\",\"actions\":\"ProductItem_actions__3m97R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2ZJnA\",\"error\":\"Notification_error__3JD3E\",\"success\":\"Notification_success__3etL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__1K8Cc\",\"badge\":\"CartButton_badge__aXmp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2DEW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__19Yfp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__FZiXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__2c24d\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  showCart: false,\n  notification: {\n    status: \"\",\n    title: \"\",\n    message: \"\",\n  },\n};\n\nexport const cartDisplay = createSlice({\n  name: \"displayCart\",\n  initialState,\n  reducers: {\n    show: (state) => {\n      state.showCart = true;\n    },\n    hide: (state) => {\n      state.showCart = false;\n    },\n    toggle: (state) => {\n      state.showCart = !state.showCart;\n    },\n    addNotification: (state, action) => {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const cartActions = cartDisplay.actions;\n\nexport default cartDisplay.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { cartActions } from \"./cartDisplay\";\n\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n};\n\nexport const cartItems = createSlice({\n  name: \"displayCart\",\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      const existing = state.items.find(\n        (element) => element.title === newItem.title\n      );\n      if (!existing) {\n        state.items.push({\n          title: newItem.title,\n          quantity: 1,\n          total: Number(newItem.price),\n          price: Number(newItem.price),\n        });\n        state.totalQuantity++;\n      } else {\n        existing.quantity++;\n        existing.total += existing.price;\n      }\n    },\n    increment: (state, action) => {\n      const newItemTitle = action.payload;\n      const existing = state.items.find(\n        (element) => element.title === newItemTitle\n      );\n      existing.quantity++;\n      existing.total += existing.price;\n    },\n    decrement: (state, action) => {\n      const selectedItemTitle = action.payload;\n      const existing = state.items.find(\n        (element) => element.title === selectedItemTitle\n      );\n      if (existing.quantity === 1) {\n        state.items = state.items.filter(\n          (item) => item.title !== selectedItemTitle\n        );\n        state.totalQuantity--;\n      } else {\n        existing.quantity--;\n        existing.total -= existing.price;\n      }\n    },\n    fetchData: (state, action) => {\n      if(action.payload === null) {\n        return;\n      }\n      state.items = [...action.payload.items];\n      state.totalQuantity = action.payload.totalQuantity;\n    },\n  },\n});\n\nexport const sendCartData = (cart) => {\n  // Returning function work fine in redux toolkit\n  return async (dispatch) => {\n    dispatch(\n      cartActions.addNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data\",\n      })\n    );\n    const sendRequest = async () => {\n      const response = await fetch(\n        process.env.REACT_APP_FIREBASE_ADDRESS,\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(\n        cartActions.addNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n    } catch (err) {\n      dispatch(\n        cartActions.addNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nexport const cartItemsActions = cartItems.actions;\n\nexport default cartItems.reducer;\n","import { useDispatch } from 'react-redux';\nimport { Fragment } from \"react\";\nimport classes from \"./CartItem.module.css\";\nimport { cartItemsActions } from '../../store/cartItems';\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const increment = (title) => {\n    dispatch(cartItemsActions.increment(title))\n  }\n  const decrement = (title) => {\n    dispatch(cartItemsActions.decrement(title))\n  }\n  const item = props.items.map((val) => (\n    <li className={classes.item}>\n      <header>\n        <h3>{val.title}</h3>\n        <div className={classes.price}>\n          ${val.total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${val.price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{val.quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={() => {decrement(val.title)}}>-</button>\n          <button onClick={() => {increment(val.title)}}>+</button>\n        </div>\n      </div>\n    </li>\n  ));\n\n  return (\n    <Fragment>\n      {props.items && item}\n    </Fragment>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n\nconst Cart = (props) => {\n  const item = useSelector((state) => state.cartItems);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {item && <CartItem\n          items={item.items}\n        />}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { cartActions } from '../../store/cartDisplay';\nimport classes from './CartButton.module.css';\n\nconst CartButton = (props) => {\n  const cnt = useSelector((state) => state.cartItems)\n  const dispatch = useDispatch();\n  const toggleCart = () => {\n    dispatch(cartActions.toggle());\n  }\n  return (\n    <button className={classes.button} onClick={toggleCart}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cnt ? cnt.totalQuantity : 0}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from \"../Cart/CartButton\";\nimport classes from \"./MainHeader.module.css\";\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from \"react-redux\";\nimport { cartItemsActions } from \"../../store/cartItems\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  const addItem = (item) => {\n    dispatch(cartItemsActions.addItem(item))\n  }\n  const items = props.items.map((item) => (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{item.title}</h3>\n          <div className={classes.price}>${item.price.toFixed(2)}</div>\n        </header>\n        <p>{item.description}</p>\n        <div className={classes.actions}>\n          <button onClick={() => {addItem(item)}}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  ));\n\n  return (\n    <ul>\n      { items }\n    </ul>\n  );\n};\n\nexport default ProductItem;\n","import { useSelector } from \"react-redux\";\nimport ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst Products = (props) => {\n  const items = useSelector((state) => state.shopItems);\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        <ProductItem items={items} />\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\n\nconst Notification = (props) => {\n  let specialClasses = '';\n\n  if (props.status === 'error') {\n    specialClasses = classes.error;\n  }\n  if (props.status === 'success') {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;","import { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { sendCartData } from \"./store/cartItems\";\nimport { fetchCartData } from \"./store/fetchOnStart\";\n\n// Use so that checking that page is loading first time\n// On loading first time, data should be loaded from server\nlet isInitial = true;\n\nfunction App() {\n  const displayCart = useSelector((state) => state.cart.showCart);\n  const cart = useSelector((state) => state.cartItems);\n  const notification = useSelector((state) => state.cart.notification);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch])\n\n  // PUT will overwrite the data where POST will update data\n  useEffect(() => {\n    // // One way of Sending data to server\n    // const sendingCartData = async () => {\n    //   dispatch(\n    //     cartActions.addNotification({\n    //       status: \"pending\",\n    //       title: \"Sending...\",\n    //       message: \"Sending cart data\",\n    //     })\n    //   );\n    //   const response = await fetch(\n    //     process.env.REACT_APP_FIREBASE_ADDRESS,\n    //     {\n    //       method: \"PUT\",\n    //       body: JSON.stringify(cart),\n    //     }\n    //   );\n    //   if (!response.ok) {\n    //     throw new Error(\"Sending cart data failed.\");\n    //   }\n    //   dispatch(\n    //     cartActions.addNotification({\n    //       status: \"success\",\n    //       title: \"Success!\",\n    //       message: \"Sent cart data successfully!\",\n    //     })\n    //   );\n    // };\n    // if(isInitial) {\n    //   return isInitial = false;;\n    // }\n    // sendingCartData().catch((err) => {\n    //   dispatch(\n    //     cartActions.addNotification({\n    //       status: \"error\",\n    //       title: \"Error!\",\n    //       message: \"Sending cart data failed!\",\n    //     })\n    //   );\n    // });\n\n    // Another approach of sending data to server\n    if(isInitial) {\n      isInitial = false;\n      return;\n    }\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n  return (\n    <Fragment>\n      <Notification\n        status={notification.status}\n        title={notification.title}\n        message={notification.message}\n      />\n      <Layout>\n        {displayCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { cartActions } from \"./cartDisplay\";\nimport { cartItemsActions } from \"./cartItems\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        process.env.REACT_APP_FIREBASE_ADDRESS\n      );\n      if (!response.ok) {\n        throw new Error(\"Receiving cart data failed.\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      // if (cartData) {\n      //   cartData.forEach((element) => {\n      //     alert(`${element.title} ${element.price} ${element.quantity}`);\n      //   });      \n      //   dispatch(cartItemsActions.fetchData(cartData));\n      // }\n      dispatch(cartItemsActions.fetchData({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n      dispatch(\n        cartActions.addNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Received cart data successfully!\",\n        })\n      );\n    } catch (err) {\n      alert(err);\n      dispatch(\n        cartActions.addNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Receiving cart data failed!\",\n        })\n      );\n    }\n  };\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n  {\n    title: \"Test Item1\",\n    price: 6,\n    description: \"First product of the Store\",\n  },\n  {\n    title: \"Test Item2\",\n    price: 12,\n    description: \"Second product of the Store\",\n  },\n  {\n    title: \"Test Item3\",\n    price: 12,\n    description: \"Second product of the Store\",\n  },\n];\n\nexport const shopItems = createSlice({\n  name: \"displayCart\",\n  initialState,\n  reducers: {},\n});\n\nexport default shopItems.reducer;\n","import { configureStore } from '@reduxjs/toolkit'\nimport cartDisplayReducer from './cartDisplay';\nimport cartItemsReducer from './cartItems';\nimport shopItemsReducer from './shopItems';\n\nexport const store = configureStore({\n  reducer: { cart: cartDisplayReducer, cartItems: cartItemsReducer, shopItems: shopItemsReducer },\n})","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}